apiVersion: "sparkoperator.k8s.io/v1beta2"
kind: SparkApplication
metadata:
  name: spark-test
  namespace: default
spec:
  type: Scala
  mode: cluster
  image: "ghcr.io/apache/spark-docker/spark:3.5.2"
  imagePullPolicy: IfNotPresent
  mainClass: org.apache.spark.examples.SparkPi
  mainApplicationFile: "local:///opt/spark/examples/jars/spark-examples_2.12-3.5.2.jar"
  sparkVersion: "3.5.2"
  sparkConf:
    spark.rss.storage.type: MEMORY_LOCALFILE
    spark.executor.extraJavaOptions: "-DlogTarget=Console -DbootstrapServers=127.0.0.1:9092"
    spark.driver.extraJavaOptions: "-DlogTarget=Console -DbootstrapServers=127.0.0.1:9092"
    spark.log.level: "DEBUG"
  restartPolicy:
    type: Never
  volumes:
    - name: "test-volume"
      hostPath:
        path: "/tmp"
        type: Directory
  driver:
    kubernetesMaster: https://172.18.0.3:5443
    env:
      - name: KUBERNETES_SERVICE_HOST
        value: "172.18.0.3"
      - name: KUBERNETES_SERVICE_PORT
        value: "5443"
    coreLimit: "1200m"
    memory: "512m"
    labels:
      version: 3.5.2
    serviceLabels:
      spark-app-name: spark-test
    secrets:
      - name: spark-opaque-secret
        path: /var/run/secrets/kubernetes.io/serviceaccount
        secretType: Generic
  executor:
    env:
      - name: KUBERNETES_SERVICE_HOST
        value: "172.18.0.3"
      - name: KUBERNETES_SERVICE_PORT
        value: "5443"
    coreRequest: "500m"
    coreLimit: "500m"
    instances: 3
    memory: "500m"
    labels:
      version: 3.5.2
    secrets:
      - name: spark-opaque-secret
        path: /var/run/secrets/kubernetes.io/serviceaccount
        secretType: Generic
    volumeMounts:
      - name: "test-volume"
        mountPath: "/tmp"
