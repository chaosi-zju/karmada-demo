apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: "1"
    meta.helm.sh/release-name: spark-operator
    meta.helm.sh/release-namespace: karmada-system
  creationTimestamp: "2024-10-17T11:29:42Z"
  generation: 1
  labels:
    app.kubernetes.io/component: webhook
    app.kubernetes.io/instance: spark-operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: spark-operator
    app.kubernetes.io/version: 2.0.2
    helm.sh/chart: spark-operator-2.0.2
  name: spark-operator-webhook
  namespace: karmada-system
  resourceVersion: "141244"
  uid: 9057440a-9b01-4d9e-a0b1-1e35ad5b23be
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app.kubernetes.io/component: webhook
      app.kubernetes.io/instance: spark-operator
      app.kubernetes.io/name: spark-operator
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      creationTimestamp: null
      labels:
        app.kubernetes.io/component: webhook
        app.kubernetes.io/instance: spark-operator
        app.kubernetes.io/name: spark-operator
    spec:
      containers:
      - args:
        - webhook
        - start
        - --zap-log-level=info
        - --namespaces=default
        - --webhook-secret-name=spark-operator-webhook-certs
        - --webhook-secret-namespace=karmada-system
        - --webhook-svc-name=spark-operator-webhook-svc
        - --webhook-svc-namespace=karmada-system
        - --webhook-port=9443
        - --mutating-webhook-name=spark-operator-webhook
        - --validating-webhook-name=spark-operator-webhook
        - --enable-metrics=true
        - --metrics-bind-address=:8080
        - --metrics-endpoint=/metrics
        - --metrics-prefix=
        - --metrics-labels=app_type
        - --leader-election=true
        - --leader-election-lock-name=spark-operator-webhook-lock
        - --leader-election-lock-namespace=karmada-system
        image: docker.io/kubeflow/spark-operator:2.0.2
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /healthz
            port: 8081
            scheme: HTTP
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        name: spark-operator-webhook
        ports:
        - containerPort: 9443
          name: webhook
          protocol: TCP
        - containerPort: 8080
          name: metrics
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /readyz
            port: 8081
            scheme: HTTP
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      serviceAccount: spark-operator-webhook
      serviceAccountName: spark-operator-webhook
      terminationGracePeriodSeconds: 30
status:
  availableReplicas: 1
  conditions:
  - lastTransitionTime: "2024-10-17T11:29:45Z"
    lastUpdateTime: "2024-10-17T11:29:45Z"
    message: Deployment has minimum availability.
    reason: MinimumReplicasAvailable
    status: "True"
    type: Available
  - lastTransitionTime: "2024-10-17T11:29:43Z"
    lastUpdateTime: "2024-10-17T11:29:45Z"
    message: ReplicaSet "spark-operator-webhook-845df958b7" has successfully progressed.
    reason: NewReplicaSetAvailable
    status: "True"
    type: Progressing
  observedGeneration: 1
  readyReplicas: 1
  replicas: 1
  updatedReplicas: 1
