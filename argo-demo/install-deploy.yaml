apiVersion: v1
kind: Service
metadata:
  name: argo-server
  namespace: karmada-system
spec:
  ports:
  - name: web
    nodePort: 30000
    port: 2746
    targetPort: 2746
  selector:
    app: argo-server
  type: NodePort
---
apiVersion: scheduling.k8s.io/v1
kind: PriorityClass
metadata:
  name: workflow-controller
value: 1000000
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: argo-server
  namespace: karmada-system
spec:
  selector:
    matchLabels:
      app: argo-server
  template:
    metadata:
      labels:
        app: argo-server
    spec:
      containers:
      - args:
        - server
        - --auth-mode=server
        - --kubeconfig=/etc/kubeconfig
        env: []
        image: quay.io/argoproj/argocli:v3.5.0-rc2
        name: argo-server
        ports:
        - containerPort: 2746
          name: web
        readinessProbe:
          httpGet:
            path: /
            port: 2746
            scheme: HTTPS
          initialDelaySeconds: 10
          periodSeconds: 20
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsNonRoot: true
        volumeMounts:
        - mountPath: /tmp
          name: tmp
        - mountPath: /etc/kubeconfig
          name: kubeconfig
          subPath: kubeconfig
      nodeSelector:
        kubernetes.io/os: linux
      securityContext:
        runAsNonRoot: true
      # serviceAccountName: argo-server
      volumes:
      - name: kubeconfig
        secret:
          defaultMode: 420
          secretName: kubeconfig
      - emptyDir: {}
        name: tmp
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: workflow-controller
  namespace: karmada-system
spec:
  selector:
    matchLabels:
      app: workflow-controller
  template:
    metadata:
      labels:
        app: workflow-controller
    spec:
      containers:
      - args: []
        command:
        - workflow-controller
        - --kubeconfig=/etc/kubeconfig
        env:
        - name: LEADER_ELECTION_IDENTITY
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.name
        image: quay.io/argoproj/workflow-controller:v3.5.0-rc2
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /healthz
            port: 6060
          initialDelaySeconds: 90
          periodSeconds: 60
          timeoutSeconds: 30
        name: workflow-controller
        volumeMounts:
        - mountPath: /etc/kubeconfig
          name: kubeconfig
          subPath: kubeconfig
        ports:
        - containerPort: 9090
          name: metrics
        - containerPort: 6060
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsNonRoot: true
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: workflow-controller
      securityContext:
        runAsNonRoot: true
      # serviceAccountName: argo
      volumes:
      - name: kubeconfig
        secret:
          defaultMode: 420
          secretName: kubeconfig